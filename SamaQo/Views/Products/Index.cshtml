@using Microsoft.AspNetCore.Identity
@model IEnumerable< Product>
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Home Page";
}

<form asp-action="Index" class="row row-cols-lg-auto g-3 align-items-center">
    <div class="col-12">
        <label class="visually-hidden" for="search">Search</label>
    <div class="input-group">
      <div class="input-group-text"></div>
            <input type="text" class="form-control" name="search" placeholder="Search">
    </div>
  </div>

  <div class="col-12">
    <button type="submit" class="btn btn-primary">Search</button>
    <a asp-action="Index" class="btn btn-primary">Reset</a>
  </div>
</form>

@if (SignInManager.IsSignedIn(User))
{
    @if (User.IsInRole("Admin"))
    {
        <p>
            <a class="btn btn-success mt-5" asp-action="Create">Create</a>
        </p>
    }
}

<div class="d-flex flex-wrap mt-5 mb-3 justify-content-around">
    @foreach(var item in Model)
    {
        <div class="card mt-3" style="width: 16rem;">
            @* <img src="@item.ProdImage" class="card-img-top" alt="NoImage"> *@
            <div class="card-body">
                <h5 class="card-title">Product Name : @item.Name</h5>
                <p class="card-text">Price : @item.Price </p>
                <p class="card-text">Supplier Name : @item.Supplier.SupplierName
                    @if (SignInManager.IsSignedIn(User))
                    {
                        @if(User.IsInRole("Admin")){
                        <p>
                            <a asp-action="Edit" class="btn btn-secondary" asp-route-id="@item.Id">Edit</a>
                            <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.Id">Delete</a>
                        </p>
                        }
                    }
            </div>
        </div>
    }
</div>